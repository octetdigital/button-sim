<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprControl</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///GLOBALS

global.inGame = false;

//IN GAME POPUP MESSAGES
global.async_exit = undefined;
global.async_quit = undefined;

//SOCIAL
global.player_name = undefined;
global.player_id   = undefined;
global.leaderboard_id[0] = "CgkI0fz48IgCEAIQCA";
global.get = undefined;

//DISPLAY
global.screen_h = room_height;
global.screen_w = room_width;
global.aspect_r = room_width / room_height;

//STATS
score = 0;
global.highscore = -1;
global.timer     =  0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///MEMBER VARS

m_alpha = 1;
m_alpha_sign = -1;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///SETUP SPRITE FONT
var _font = font_add_sprite_ext(sprASCII, "1234567890abcdefghijklmnopqrstuvwxyz!)&lt;&gt;ABCDEFGHIJKLMNOPQRSTUVWXYZ:;,.-",true, 1);
draw_set_colour(c_white);
draw_set_font(_font);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///SETUP SCREEN

//APPLICATION SURFACE 
switch(os_type) {
    case os_windows:
    case os_macosx:
    case os_linux:
    case os_win8native:
    if(surface_get_width(application_surface)  != window_get_width() || 
       surface_get_height(application_surface) != window_get_height()) {
       global.screen_w = window_get_width();
       global.screen_h = window_get_height();
    }
    break;
    case os_ios:
    case os_android:
    case os_winphone:
    case os_tizen:
    if(surface_get_width(application_surface)  != display_get_width() || 
       surface_get_height(application_surface) != display_get_height()) {
       global.screen_w = display_get_width();
       global.screen_h = display_get_height();
       //display_set_gui_size(global.screen_w, global.screen_h);
    }
    break;
    default:
        show_debug_message("NO OS CHOSEN");
}

var _base_w = 960;
var _base_h = 540;
global.aspect_r = global.screen_w / global.screen_h;
if(global.screen_w &lt; global.screen_h) {
    //PORTRAIT
    var _view_w = min(_base_w, global.screen_w);
    var _view_h = _view_w / global.aspect_r;
} else {
    //LANDSCAPE
    var _view_h = min(_base_h, global.screen_h);
    var _view_w = _view_h * global.aspect_r;
}

view_wview[0] = floor(_view_w);
view_hview[0] = floor(_view_h);
view_wport[0] = global.screen_w;
view_hport[0] = global.screen_h;

surface_resize(application_surface, view_wview[0], view_hview[0]);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///SOCIAL GAME PUB LOGIN
if(!achievement_login_status()) {
    achievement_login();
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.result</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>"N/A"</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///TIMER

global.timer -= 1;

if(global.timer &lt;= 0) {
    room_goto(rmMain);
} else {
    alarm[0] = room_speed;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///CHECK KEYPRESS

var _bck = keyboard_check_released(vk_backspace);

//QUIT GAME
if(_bck &amp;&amp; !global.inGame) {
    global.async_exit = show_question_async("Quit the game?");
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="70">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///GOOGLE PLAY LOGIN

var _id  = ds_map_find_value(async_load, "id");

if(_id == achievement_our_info) {
    global.player_name = ds_map_find_value(async_load, "name");
    global.player_id   = ds_map_find_value(async_load, "playerid");
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///LOAD MY HIGHSCORE

var _id  = ds_map_find_value(async_load, "id");

if(_id == achievement_leaderboard_info) {
    var _boardid = ds_map_find_value(async_load, "leaderboardid");
    if(_boardid == global.leaderboard_id[0] || _boardid == "test leaders") {
       var _num = ds_map_find_value(async_load,"numentries");
        var _i = 0;
        while(i &lt; _num) {
            if(ds_map_find_value(async_load,"Playerid" + string(_i)) == global.player_id) {
                global.highscore = ds_map_find_value(async_load, "Score" + string(i));
                break;
            }
        _i += 1;
        }
        global.highscore += 11;
    }
    global.highscore += 11;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="63">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///QUIT THE GAME?

var _msg_id = ds_map_find_value(async_load, "id");

if(_msg_id == global.async_exit) {
var _answer = ds_map_find_value(async_load, "status");
    if(_answer) {
        game_end();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="62">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///SAVE RESULT FROM HTTP GET CALL

var _msg_id = ds_map_find_value(async_load, "id");

if(global.get == _msg_id) {
    var _status = ds_map_find_value(async_load, "status");
    if(_status == 0) {
        global.result = ds_map_find_value(async_load, "result");
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///CHECK HIGHSCORE

/*
    AUTHOR: octetdigital@gmail.com
    DESCRIPTION:  Sets the highscore from either a local copy or online leaderboard
*/

if(room == rmSplash) {
    if(global.highscore == -1) {
        if(os_type == os_android){
            //NOT WORKING: achievement_load_leaderboard(global.leaderboard_id[0],  1, 100, achievement_filter_friends_only);
        }else{
            global.highscore = 0;
        }
        global.highscore = LoadData('real','highscore');
    }
}

if(score &gt; 0 &amp;&amp; score &gt; global.highscore) {
    global.highscore = score;
    if(achievement_available()) {
        achievement_post_score(global.leaderboard_id[0],score);
    }
    SaveData('highscore',score);
}

score = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///SPLASH SCREEN

if(room == rmSplash) {
        instance_create(0,0, objSplashScreen);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///TITLE

if(room == rmMain)
    instance_create(floor(view_wview[0]/2),floor(view_hview[0]/2), objTitle);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///TIMER

global.timer = 30;

if(room == rmGame)
    alarm[0] = room_speed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///DRAW SCORE
if(room == rmGame) {
    draw_text(0, 0, "SCORE: " + string(score));
}
if(room == rmMain) {
    draw_text(0, 0, "HIGHSCORE: " + string(global.highscore));
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///DRAW COUNT DOWN

if(room == rmGame) {
    draw_set_halign(fa_center);
    draw_text(global.screen_w/2,0, "00:"+ string_format(global.timer,1,0));
    //RESET
    draw_set_halign(fa_left);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///DRAW START
if(room == rmMain) {
    draw_set_halign(fa_center);
    if(m_alpha &lt; 0 || m_alpha &gt; 1) {m_alpha_sign *= -1;}
    m_alpha += (0.05 * m_alpha_sign);
    draw_set_alpha(m_alpha);
    draw_text(global.screen_w/2, global.screen_h/2, "&lt;&lt; TAP TO START &gt;&gt;");
    //RESET
    draw_set_alpha(1);
    draw_set_halign(fa_left);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>-88,-45</point>
    <point>30,30</point>
  </PhysicsShapePoints>
</object>
